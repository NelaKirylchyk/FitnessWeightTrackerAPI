@page "/foodrecords"
@using Microsoft.AspNetCore.Components.Authorization
@using FitnessWeightTracker.Client.Models
@using FitnessWeightTracker.Client.Services
@inject FoodRecordsService RecordsService
@inject FoodItemsService ItemsService

<h2 class="mb-4">Food Records</h2>

<AuthorizeView>
    <Authorized Context="_">
        @if (isLoading)
        {
            <div class="text-center my-5">
                <div class="spinner-border text-primary" role="status" aria-hidden="true"></div>
                <div class="mt-2 text-muted">Loading records…</div>
            </div>
        }
        else
        {
            @if (!string.IsNullOrEmpty(message))
            {
                <div class="alert mb-3">@message</div>
            }

            <div class="row g-4">
                <div class="col-12 col-xl-5">
                    <div class="card elevate">
                        <div class="card-header">@(isEditing ? "Edit Record" : "Add Record")</div>
                        <div class="card-body">
                            <EditForm Model="@editModel" OnValidSubmit="SaveAsync">
                                <DataAnnotationsValidator />
                                <ValidationSummary class="mb-3" />

                                <div class="mb-3">
                                    <label for="item" class="form-label">Food Item</label>
                                    <InputSelect id="item" class="form-select" @bind-Value="editModel.FoodItemId">
                                        <option value="">-- Select --</option>
                                        @foreach (var i in items)
                                        {
                                            <option value="@i.Id">@i.Name</option>
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="@(() => editModel.FoodItemId)" />
                                </div>

                                <div class="mb-3">
                                    <label for="qty" class="form-label">Quantity (g)</label>
                                    <InputNumber id="qty" class="form-control" @bind-Value="editModel.Quantity" step="1" />
                                    <ValidationMessage For="@(() => editModel.Quantity)" />
                                </div>

                                <div class="mb-3">
                                    <label for="date" class="form-label">Consumption Date</label>
                                    <InputDate id="date" class="form-control" @bind-Value="editModel.ConsumptionDate" />
                                    <ValidationMessage For="@(() => editModel.ConsumptionDate)" />
                                </div>

                                <div class="d-flex gap-2">
                                    <button type="submit" class="btn btn-primary flex-fill">
                                        @(isEditing ? "Update" : "Add")
                                    </button>
                                    @if (isEditing)
                                    {
                                        <button type="button" class="btn btn-outline-secondary" @onclick="CancelEdit">Cancel</button>
                                    }
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div>

                <div class="col-12 col-xl-7">
                    <div class="card elevate">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <span>Records</span>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="orderSwitch" @onchange="ToggleOrder" checked="@(!ascending)">
                                <label class="form-check-label" for="orderSwitch">Newest first</label>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table align-middle">
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>Item</th>
                                            <th class="text-end">Qty (g)</th>
                                            <th class="text-end">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var r in records)
                                        {
                                            <tr>
                                                <td>@r.ConsumptionDate.ToString("yyyy-MM-dd")</td>
                                                <td>@(r.FoodItem?.Name ?? items.FirstOrDefault(i => i.Id == r.FoodItemId)?.Name ?? $"#{r.FoodItemId}")</td>
                                                <td class="text-end">@r.Quantity.ToString("0")</td>
                                                <td class="text-end">
                                                    <div class="btn-group btn-group-sm">
                                                        <button class="btn btn-outline-primary" @onclick="() => BeginEdit(r)">Edit</button>
                                                        <button class="btn btn-danger" @onclick="() => DeleteAsync(r.Id)">Delete</button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            @if (records.Count == 0)
                            {
                                <div class="text-muted">No food records yet. Add one on the left.</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-info">Please log in to manage food records.</div>
    </NotAuthorized>
</AuthorizeView>