@page "/bodyweight-target"
@using Microsoft.AspNetCore.Components.Authorization
@using FitnessWeightTracker.Client.Models
@using FitnessWeightTracker.Client.Services
@inject BodyWeightTargetsService TargetsService

<h2 class="mb-4">Body Weight Target</h2>

<AuthorizeView>
    <Authorized Context="_">
        @if (isLoading)
        {
            <div class="text-center my-5">
                <div class="spinner-border text-primary" role="status" aria-hidden="true"></div>
                <div class="mt-2 text-muted">Loading target…</div>
            </div>
        }
        else
        {
            @if (!string.IsNullOrEmpty(message))
            {
                <div class="alert mb-3">@message</div>
            }

            @if (current is null && !isEditing)
            {
                <div class="card elevate">
                    <div class="card-header">No target set</div>
                    <div class="card-body">
                        <button class="btn btn-primary" @onclick="BeginCreate">Create target</button>
                    </div>
                </div>
            }
            else if (isEditing)
            {
                <div class="card elevate">
                    <div class="card-header">@((current is null) ? "Create Target" : "Edit Target")</div>
                    <div class="card-body">
                        <EditForm Model="@editModel" OnValidSubmit="SaveAsync">
                            <DataAnnotationsValidator />
                            <ValidationSummary class="mb-3" />

                            <div class="mb-3">
                                <label for="tw" class="form-label">Target Weight (kg)</label>
                                <InputNumber id="tw" class="form-control" @bind-Value="editModel.TargetWeight" step="0.1" />
                                <ValidationMessage For="@(() => editModel.TargetWeight)" />
                            </div>

                            <div class="mb-3">
                                <label for="td" class="form-label">Target Date</label>
                                <InputDate id="td" class="form-control" @bind-Value="editModel.TargetDate" />
                                <ValidationMessage For="@(() => editModel.TargetDate)" />
                            </div>

                            <div class="d-flex gap-2">
                                <button type="submit" class="btn btn-primary">Save</button>
                                <button type="button" class="btn btn-outline-secondary" @onclick="CancelEdit">Cancel</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            }
            else
            {
                <div class="card elevate">
                    <div class="card-header">Current Target</div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="text-muted small">Target Weight (kg)</div>
                                <div class="fs-5">@current.TargetWeight.ToString("0.0")</div>
                            </div>
                            <div class="col-md-6">
                                <div class="text-muted small">Target Date</div>
                                <div class="fs-5">@current.TargetDate.ToString("yyyy-MM-dd")</div>
                            </div>
                        </div>
                        <div class="mt-3 d-flex gap-2">
                            <button class="btn btn-outline-primary" @onclick="BeginEdit">Edit</button>
                            <button class="btn btn-danger" @onclick="DeleteAsync">Delete</button>
                        </div>
                    </div>
                </div>
            }
        }
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-info">Please log in to manage your body weight target.</div>
    </NotAuthorized>
</AuthorizeView>